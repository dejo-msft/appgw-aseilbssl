{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aseLocation": {
      "type": "string",
      "allowedValues": [
        "Central US",
        "East US",
        "East US 2",
        "North Central US",
        "South Central US",
        "West Central US",
        "West US",
        "West US 2",
        "Canada Central",
        "North Europe",
        "West Europe",
        "East Asia",
        "Southeast Asia",
        "Japan East",
        "Japan West",
        "Brazil South",
        "Australia East",
        "Australia Southeast",
        "West India",
        "Central India",
        "South India",
        "South Africa North"
      ],
      "metadata": {
        "description": "Location of the App Service Environment. This is a workaround because ASE doesn't like the normalized (ie: westeurope) naming now. Obviously, has to be the same location as your Resource Group."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The Virtual Network address prefix."
      }
    },
    "appgwSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "The Application Gateway subnet."
      }
    },
    "dnsSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "The DNS subnet."
      }
    },
    "aseSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.3.0/24",
      "metadata": {
        "description": "The App Service Environment subnet."
      }
    },
    "aseSubnetPrefix2": {
      "type": "string",
      "defaultValue": "10.0.4.0/24",
      "metadata": {
        "description": "The App Service Environment 2 subnet."
      }
    },
    "bindIp": {
      "type": "string",
      "defaultValue": "10.0.2.50",
      "metadata": {
        "description": "The Private Static IP that will be allocated to BIND (DNS) server. This will be set as your Virtual Network's DNS server."
      }
    },
    "aseVirtualIp": {
      "type": "string",
      "defaultValue": "10.0.3.9",
      "metadata": {
        "description": "The Virtual IP of the App Service Environment's Internal Load Balancer. There is no easy way to obtain it post deployment, hence it is here. You may need to re-run the deployment after it is done to update this value."
      }
    },
    "aseVirtualIp2": {
      "type": "string",
      "defaultValue": "10.0.4.9",
      "metadata": {
        "description": "The Virtual IP of the App Service Environment's Internal Load Balancer. There is no easy way to obtain it post deployment, hence it is here. You may need to re-run the deployment after it is done to update this value."
      }
    },
    "aseName": {
      "type": "string",
      "defaultValue": "appgw-ase",
      "metadata": {
        "description": "Name of the App Service Environment. Has to be unique within the region."
      }
    },
    "aseName2": {
      "type": "string",
      "defaultValue": "appgw-ase2",
      "metadata": {
        "description": "Name of the App Service Environment. Has to be unique within the region."
      }
    },
    "aseFrontEndSize": {
      "type": "string",
      "allowedValues": [
        "Medium",
        "Large",
        "ExtraLarge"
      ],
      "defaultValue": "Medium",
      "metadata": {
        "description": "Instance size for the front-end pool.  Maps to P2,P3,P4."
      }
    },
    "aseFrontEndCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances in the front-end pool.  Minimum of two."
      }
    },
    "aseWorkerPoolOneInstanceSize": {
      "type": "string",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "ExtraLarge"
      ],
      "defaultValue": "Small",
      "metadata": {
        "description": "Instance size for worker pool one.  Maps to P1,P2,P3,P4."
      }
    },
    "aseWorkerPoolOneInstanceCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances in worker pool one.  Minimum of two."
      }
    },
    "aseWorkerPoolTwoInstanceSize": {
      "type": "string",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "ExtraLarge"
      ],
      "defaultValue": "Small",
      "metadata": {
        "description": "Instance size for worker pool two.  Maps to P1,P2,P3,P4."
      }
    },
    "aseWorkerPoolTwoInstanceCount": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Number of instances in worker pool two.  Can be zero if not using worker pool two."
      }
    },
    "aseWorkerPoolThreeInstanceSize": {
      "type": "string",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "ExtraLarge"
      ],
      "defaultValue": "Small",
      "metadata": {
        "description": "Instance size for worker pool three.  Maps to P1,P2,P3,P4."
      }
    },
    "aseWorkerPoolThreeInstanceCount": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Number of instances in worker pool three.  Can be zero if not using worker pool three."
      }
    },

    "appPlanName": {
      "type": "string",
      "defaultValue": "appgw-ase-plan",
      "metadata": {
        "description": "Name of the App Service Plan"
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "webapp1",
      "metadata": {
        "description": "The name of the app to be deployed. This will be prepended to the App Service Environment subdomain to create the app's hostname."
      }
    },
    "aseDNSSuffix": {
      "type": "string",
      "defaultValue": "internal.domain.com",
      "metadata": {
        "description": "The subdomain of the App Service Environment. This doesn't need to be a real domain."
      }
    },
    "rootZoneName": {
      "type": "string",
      "defaultValue": "domain.com",
      "metadata": {
        "description": "The public hostname of the app to be deployed. Make sure that your SSL certificate works for this and that you can manage this domain's DNS."
      }
    },

    "appgwSkuName": {
      "type": "string",
      "allowedValues": [
        "WAF_Medium",
        "WAF_Large"
      ],
      "defaultValue": "WAF_Medium",
      "metadata": {
        "description": "The SKU of the Application Gateway."
      }
    },
    "appgwCapacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "The number of instances running in the Application Gateway"
      }
    },

    "wafMode": {
      "type": "string",
      "allowedValues": [
        "Detection",
        "Prevention"
      ],
      "defaultValue": "Detection",
      "metadata": {
        "description": "WAF Mode"
      }
    },
    "wafRuleSetType": {
      "type": "string",
      "allowedValues": [
        "OWASP"
      ],
      "defaultValue": "OWASP",
      "metadata": {
        "description": "WAF Rule Set Type"
      }
    },
    "wafRuleSetVersion": {
      "type": "string",
      "allowedValues": [
        "2.2.9",
        "3.0"
      ],
      "defaultValue": "3.0",
      "metadata": {
        "description": "WAF Rule Set Version"
      }
    },

    "aseILBPfxBase64": {
      "type": "string",
      "metadata": {
        "description": "The App Service Environment pfx file encoded as a base-64 string. The certificate should have Subject=*.ase-subdomain.com, SAN=*.scm.ase-subdomain.com. The pfx contains the SSL certificate that will be configured as the SSL certificate for the ILB of the ASE."
      }
    },
    "aseILBCerBase64": {
      "type": "string",
      "metadata": {
        "description": "The App Service Environment cer file encoded as a base-64 string. The certificate should have Subject=*.ase-subdomain.com, SAN=*.scm.ase-subdomain.com. This will be used to whitelist the ASE with the AppGW and encrypt the backend communication."
      }
    },
    "aseILBPfxThumbprint": {
      "type": "string",
      "metadata": {
        "description": "The App Service Environment hexadecimal certificate thumbprint of the certificate contained in aseILBPfxBase64.  All spaces need to be removed from the hex string."
      }
    },
    "aseILBPfxPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the App Service Environment .pfx certificate"
      }
    },

    "bindUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the BIND DNS Virtual Machine."
      }
    },
    "bindPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the BIND DNS Virtual Machine."
      }
    },

    "repositoryLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/warrendt/appgw-aseilbssl/master",
      "metadata": {
        "description": "Container in staging storage account to receive post-build staging folder upload"
      }
    },

    "customScriptTimestamp": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Timestamp sent to the CustomScript extension. If you need to run the script again, you need to change this value when running the template."
      }
    }
  },
  "variables": {
    "vnetName": "appgw-vnet",
    "appgwName": "appgw",
    "bindVMName": "appgw-bind",
    "jumpBoxVMName": "appgw-jumpbox",
    "appgwPublicIpName": "[concat(variables('appgwName'), '-ip')]",
    "bindNSGName": "appgw-bind-nsg",
    "appgwSubnetName": "appgw-subnet",
    "dnsSubnetName": "dns-subnet",
    "aseSubnetName": "ase-subnet",
    "aseSubnetName2": "ase-subnet2",
    "backendFQDN": "[concat(parameters('appName'),'.',parameters('aseDNSSuffix'))]",
    "apiVersion": "2017-03-01",
    "vnetRef": "[resourceId('Microsoft.Network/virtualNetworks/',variables('vnetName'))]",
    "appgwSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'),variables('appgwSubnetName'))]",
    "dnsSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'), variables('dnsSubnetName'))]",
    "appgwPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appgwPublicIpName'))]",
    "applicationGatewayRef": "[resourceId('Microsoft.Network/applicationGateways',variables('appgwName'))]",
    "aseRef": "[resourceId('Microsoft.Web/hostingEnvironments',parameters('aseName'))]",
    "aseRef2": "[resourceId('Microsoft.Web/hostingEnvironments',parameters('aseName2'))]",
    "appPlanRef": "[resourceId('Microsoft.Web/serverFarms',parameters('appPlanName'))]"
  },
  "resources": [
    {
      "name": "create-virtualnetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'virtualnetwork.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "vnetSubnets": {
            "value": [
              {
                "name": "[variables('appgwSubnetName')]",
                "properties": {
                  "addressPrefix": "[parameters('appgwSubnetPrefix')]"
                }
              },
              {
                "name": "[variables('dnsSubnetName')]",
                "properties": {
                  "addressPrefix": "[parameters('dnsSubnetPrefix')]"
                }
              },
              {
                "name": "[variables('aseSubnetName')]",
                "properties": {
                  "addressPrefix": "[parameters('aseSubnetPrefix')]"
              }
              },
              {
                "name": "[variables('aseSubnetName2')]",
                "properties": {
                  "addressPrefix": "[parameters('aseSubnetPrefix2')]"
                }               
              }
              
            ]
          }
        }
      }
    },
    {
      "name": "create-bind",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "create-virtualnetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'binddns.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "bindVMName": {
            "value": "[variables('bindVMName')]"
          },
          "bindUsername": {
            "value": "[parameters('bindUsername')]"
          },
          "bindPassword": {
            "value": "[parameters('bindPassword')]"
          },
          "bindIP": {
            "value": "[parameters('bindIP')]"
          },
          "dnsSubnetRef": {
            "value": "[variables('dnsSubnetRef')]"
          },
          "repositoryLocation": {
            "value": "[parameters('repositoryLocation')]"
          },
          "aseDNSSuffix": {
            "value": "[parameters('aseDNSSuffix')]"
          },
          "aseVirtualIP": {
            "value": "[parameters('aseVirtualIp')]"
          },
          "customScriptTimestamp": {
            "value": "[parameters('customScriptTimestamp')]"
          }
        }
      }
    },
    {
      "name": "update-virtualnetwork-dns",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "create-bind"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'virtualnetwork.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "vnetSubnets": {
            "value": [
              {
                "name": "[variables('appgwSubnetName')]",
                "properties": {
                  "addressPrefix": "[parameters('appgwSubnetPrefix')]"
                }
              },
              {
                "name": "[variables('dnsSubnetName')]",
                "properties": {
                  "addressPrefix": "[parameters('dnsSubnetPrefix')]"
                }
              },
              {
                "name": "[variables('aseSubnetName')]",
                "properties": {
                  "addressPrefix": "[parameters('aseSubnetPrefix')]"
                }
              },
              {
                "name": "[variables('aseSubnetName2')]",
                "properties": {
                  "addressPrefix": "[parameters('aseSubnetPrefix2')]"
                }
              }
            ]
          },
          "vnetDnsServers": {
            "value": [
              "[parameters('bindIp')]"
            ]
          }
        }
      }
    },
    {
      "name": "create-jumpbox",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "update-virtualnetwork-dns"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'jumpbox.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('jumpBoxVMName')]"
          },
          "vmUsername": {
            "value": "[parameters('bindUsername')]"
          },
          "vmPassword": {
            "value": "[parameters('bindPassword')]"
          },
          "dnsSubnetRef": {
            "value": "[variables('dnsSubnetRef')]"
          }
        }
      }
    },
    {
      "name": "create-ase",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "update-virtualnetwork-dns"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'ase.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "aseLocation": {
            "value": "[parameters('aseLocation')]"
          },
          "aseName": {
            "value": "[parameters('aseName')]"
          },
          "aseFrontEndSize": {
            "value": "[parameters('aseFrontEndSize')]"
          },
          "aseFrontEndCount": {
            "value": "[parameters('aseFrontEndCount')]"
          },
          "aseWorkerPoolOneInstanceSize": {
            "value": "[parameters('aseWorkerPoolOneInstanceSize')]"
          },
          "aseWorkerPoolOneInstanceCount": {
            "value": "[parameters('aseWorkerPoolOneInstanceCount')]"
          },
          "aseWorkerPoolTwoInstanceSize": {
            "value": "[parameters('aseWorkerPoolTwoInstanceSize')]"
          },
          "aseWorkerPoolTwoInstanceCount": {
            "value": "[parameters('aseWorkerPoolTwoInstanceCount')]"
          },
          "aseWorkerPoolThreeInstanceSize": {
            "value": "[parameters('aseWorkerPoolThreeInstanceSize')]"
          },
          "aseWorkerPoolThreeInstanceCount": {
            "value": "[parameters('aseWorkerPoolThreeInstanceCount')]"
          },
          "aseDNSSuffix": {
            "value": "[parameters('aseDNSSuffix')]"
          },
          "vnetRef": {
            "value": "[variables('vnetRef')]"
          },
          "aseSubnetName": {
            "value": "[variables('aseSubnetName')]"
          },
          "pfxBase64": {
            "value": "[parameters('aseILBPfxBase64')]"
          },
          "pfxPassword": {
            "value": "[parameters('aseILBPfxPassword')]"
          },
          "pfxThumbprint": {
            "value": "[parameters('aseILBPfxThumbprint')]"
          }
        }
      }
    },
    {
      "name": "create-ase2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "update-virtualnetwork-dns"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'ase2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "aseLocation": {
            "value": "[parameters('aseLocation')]"
          },
          "aseName2": {
            "value": "[parameters('aseName2')]"
          },
          "aseFrontEndSize": {
            "value": "[parameters('aseFrontEndSize')]"
          },
          "aseFrontEndCount": {
            "value": "[parameters('aseFrontEndCount')]"
          },
          "aseWorkerPoolOneInstanceSize": {
            "value": "[parameters('aseWorkerPoolOneInstanceSize')]"
          },
          "aseWorkerPoolOneInstanceCount": {
            "value": "[parameters('aseWorkerPoolOneInstanceCount')]"
          },
          "aseWorkerPoolTwoInstanceSize": {
            "value": "[parameters('aseWorkerPoolTwoInstanceSize')]"
          },
          "aseWorkerPoolTwoInstanceCount": {
            "value": "[parameters('aseWorkerPoolTwoInstanceCount')]"
          },
          "aseWorkerPoolThreeInstanceSize": {
            "value": "[parameters('aseWorkerPoolThreeInstanceSize')]"
          },
          "aseWorkerPoolThreeInstanceCount": {
            "value": "[parameters('aseWorkerPoolThreeInstanceCount')]"
          },
          "aseDNSSuffix": {
            "value": "[parameters('aseDNSSuffix')]"
          },
          "vnetRef": {
            "value": "[variables('vnetRef')]"
          },
          "aseSubnetName2": {
            "value": "[variables('aseSubnetName2')]"
          },
          "pfxBase64": {
            "value": "[parameters('aseILBPfxBase64')]"
          },
          "pfxPassword": {
            "value": "[parameters('aseILBPfxPassword')]"
          },
          "pfxThumbprint": {
            "value": "[parameters('aseILBPfxThumbprint')]"
          }
        }
      }
    },
    {
      "name": "create-appgw",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "update-virtualnetwork-dns"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'appgw.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "appgwSubnetName": {
            "value": "[variables('appgwSubnetName')]"
          },
          "appgwName": {
            "value": "[variables('appgwName')]"
          },
          "appgwSkuName": {
            "value": "[parameters('appgwSkuName')]"
          },
          "appgwCapacity": {
            "value": "[parameters('appgwCapacity')]"
          },
          "backendCerBase64": {
            "value": "[parameters('aseILBCerBase64')]"
          },
          "wafMode": {
            "value": "[parameters('wafMode')]"
          },
          "wafRuleSetType": {
            "value": "[parameters('wafRuleSetType')]"
          },
          "wafRuleSetVersion": {
            "value": "[parameters('wafRuleSetVersion')]"
          }
        }
      }
    },
    {
      "name": "create-dnszone",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "create-appgw"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'dnszone.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "rootZoneName": {
            "value": "[parameters('rootZoneName')]"
          },
          "appName": {
            "value": "[parameters('appName')]"
          },
          "appgwPublicIpName": {
            "value": "[variables('appgwPublicIpName')]"
          }
        }
      }
    },
    {
      "name": "create-appplan",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "create-ase"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'appplan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appPlanName": {
            "value": "[parameters('appPlanName')]"
          },
          "aseName": {
            "value": "[parameters('aseName')]"
          },
          "applicationGatewayRef": {
            "value": "[variables('applicationGatewayRef')]"
          }
        }
      }
    },
    {
      "name": "create-appplan2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "create-ase2"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/shared/', 'appplan2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appPlanName": {
            "value": "[parameters('appPlanName')]"
          },
          "aseName2": {
            "value": "[parameters('aseName2')]"
          },
          "applicationGatewayRef": {
            "value": "[variables('applicationGatewayRef')]"
          }
        }
      }
    },
    {
      "name": "create-webapp",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "create-appplan"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('repositoryLocation'), '/nested/member/', 'webapp.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appName": {
            "value": "[parameters('appName')]"
          },
          "appplanName": {
            "value": "[parameters('appplanName')]"
          },
          "aseILBCertificateThumbprint": {
            "value": "[parameters('aseILBPfxThumbprint')]"
          },
          "aseDNSSuffix": {
            "value": "[parameters('aseDNSSuffix')]"
          }
        }
      }
    }
  ],
  "outputs": {

  }
}
